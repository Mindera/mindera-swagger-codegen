/**
 * {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
 */
{{#useBeanValidation}}@Validated{{/useBeanValidation}}
{{>generatedAnnotation}}{{#discriminator}}
{{>typeInfoAnnotation}}{{/discriminator}}
public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {
  {{#serializableModel}}

  private static final long serialVersionUID = 1L;
  {{/serializableModel}}
  {{#vars}}
    {{#isEnum}}
    {{^isContainer}}

{{>enumClass}}
    {{/isContainer}}
    {{/isEnum}}
    {{#items.isEnum}}
      {{#items}}
      {{^isContainer}}

{{>enumClass}}
      {{/isContainer}}
      {{/items}}
    {{/items.isEnum}}

  {{#jackson}}
  @JsonProperty("{{baseName}}"){{#withXml}}
  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace="{{xmlNamespace}}", {{/xmlNamespace}}localName = "{{#xmlName}}{{xmlName}}{{/xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}"){{/withXml}}
  {{/jackson}}
  {{#gson}}
  @SerializedName("{{baseName}}")
  {{/gson}}
  {{#isContainer}}
  {{#useBeanValidation}}@Valid{{/useBeanValidation}}
  private {{{datatypeWithEnum}}} {{name}}{{#required}} = {{{defaultValue}}}{{/required}}{{^required}} = null{{/required}};
  {{/isContainer}}
  {{^isContainer}}
  private {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};
  {{/isContainer}}
  {{/vars}}

  public {{classname}}() {
  }

  public {{classname}}({{#allVars}}final {{{datatypeWithEnum}}} {{name}}{{#hasMore}}, {{/hasMore}}{{/allVars}}) {
    {{#allVars}}
    {{setter}}({{name}});
    {{/allVars}}
  }

  protected {{classname}}(final GenericBuilder builder) {
    {{#parent}}
    super(builder);
    {{/parent}}
    {{#vars}}
    this.{{name}} = builder.{{name}};
    {{/vars}}
  }

  {{#vars}}
  public {{classname}} {{name}}(final {{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
    return this;
  }
  {{#isListContainer}}

  public {{classname}} add{{nameInCamelCase}}Item(final {{{items.datatypeWithEnum}}} {{name}}Item) {
    {{^required}}
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    {{/required}}
    this.{{name}}.add({{name}}Item);
    return this;
  }
  {{/isListContainer}}
  {{#isMapContainer}}

  public {{classname}} put{{nameInCamelCase}}Item(final String key, final {{{items.datatypeWithEnum}}} {{name}}Item) {
    {{^required}}
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    {{/required}}
    this.{{name}}.put(key, {{name}}Item);
    return this;
  }
  {{/isMapContainer}}

  /**
  {{#description}}
   * {{{description}}}
  {{/description}}
  {{^description}}
   * Get {{name}}
  {{/description}}
  {{#minimum}}
   * minimum: {{minimum}}
  {{/minimum}}
  {{#maximum}}
   * maximum: {{maximum}}
  {{/maximum}}
   * @return {{name}}
  **/
  {{#vendorExtensions.extraAnnotation}}
  {{{vendorExtensions.extraAnnotation}}}
  {{/vendorExtensions.extraAnnotation}}
  {{#useBeanValidation}}
{{>beanValidation}}
  {{/useBeanValidation}}
  public {{{datatypeWithEnum}}} {{getter}}() {
    return {{name}};
  }

  public void {{setter}}(final {{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
  }

  {{/vars}}

  @Override
  public boolean equals(final Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }{{#hasVars}}
    {{classname}} {{classVarName}} = ({{classname}}) o;
    return {{#vars}}Objects.equals(this.{{name}}, {{classVarName}}.{{name}}){{#hasMore}} &&
        {{/hasMore}}{{/vars}}{{#parent}} &&
        super.equals(o){{/parent}};{{/hasVars}}{{^hasVars}}
    return true;{{/hasVars}}
  }

  @Override
  public int hashCode() {
    return Objects.hash({{#vars}}{{name}}{{#hasMore}}, {{/hasMore}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {\n");{{#parent}}
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
    {{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
    {{/vars}}sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  @SuppressWarnings("unchecked")
  protected static class GenericBuilder<T extends GenericBuilder<T>> {{#parent}}extends {{{parent}}}.GenericBuilder<T> {{/parent}}{

      {{#vars}}
      protected {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};
      {{/vars}}

      {{#vars}}
      {{^isReadOnly}}
      public T {{vendorExtensions.builder}}({{{datatypeWithEnum}}} {{name}}) {
          {{#required}}
          Objects.requireNonNull({{name}});
          {{/required}}
          this.{{name}} = {{name}};
          return (T)this;
      }
      {{^-last}}

      {{/-last}}
      {{/isReadOnly}}
      {{/vars}}
  }

  public static class Builder extends GenericBuilder<Builder> {

    public {{classname}} build() {
        return new {{classname}}(this);
    }
  }
}